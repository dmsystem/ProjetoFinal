-- Criar o banco de dados
CREATE DATABASE site_venda_comida;

-- Usar o banco de dados
USE site_venda_comida;

-- Tabela Cliente
CREATE TABLE Cliente (
    ID SERIAL PRIMARY KEY,
    Nome VARCHAR(255),
    Endereco VARCHAR(255),
    Telefone VARCHAR(15),
    Email VARCHAR(255)
);
-- Tabela Restaurante
CREATE TABLE Restaurante (
    ID SERIAL PRIMARY KEY,
    Nome VARCHAR(255),
    Endereco VARCHAR(255),
    Especialidades VARCHAR(255),
    HorarioFuncionamento VARCHAR(100)
);
CREATE TYPE StatusPedido AS ENUM ('Pendente', 'EmPreparo', 'Entregue');
-- Tabela Pedido
CREATE TABLE Pedido (
    ID SERIAL PRIMARY KEY,
    DataHoraPedido DATE,
    Status StatusPedido,
    TotalPedido DECIMAL(10, 2),
    ClienteID INT,
    RestauranteID INT,
    FOREIGN KEY (ClienteID) REFERENCES Cliente(ID),
    FOREIGN KEY (RestauranteID) REFERENCES Restaurante(ID)
);

-- Tabela ItemDeMenu
CREATE TABLE ItemDeMenu (
    ID SERIAL PRIMARY KEY,
    Nome VARCHAR(255),
    Descricao TEXT,
    Preco DECIMAL(10, 2),
    RestauranteID INT,
    CategoriaID INT
);

CREATE TABLE ItemDePedido (
    ID SERIAL PRIMARY KEY,
    PedidoID INT,
    ItemDeMenuID INT,
    Quantidade INT,  -- Quantidade de unidades desse item no pedido
    ValorUnitario DECIMAL(10, 2),  -- Valor unitário do item no pedido
    Subtotal DECIMAL(10, 2),  -- Subtotal para esse item no pedido
    FOREIGN KEY (PedidoID) REFERENCES Pedido(ID),
    FOREIGN KEY (ItemDeMenuID) REFERENCES ItemDeMenu(ID)
);



-- Tabela CategoriaDeMenu
CREATE TABLE CategoriaDeMenu (
    ID SERIAL PRIMARY KEY,
    Nome VARCHAR(255)
);

-- Tabela de Associação para Itens de Menu e Categorias de Menu (Relação N:N)
CREATE TABLE ItemDeMenu_CategoriaDeMenu (
    ItemDeMenuID INT,
    CategoriaDeMenuID INT,
    PRIMARY KEY (ItemDeMenuID, CategoriaDeMenuID),
    FOREIGN KEY (ItemDeMenuID) REFERENCES ItemDeMenu(ID),
    FOREIGN KEY (CategoriaDeMenuID) REFERENCES CategoriaDeMenu(ID)
);


CREATE OR REPLACE FUNCTION CalcularSubtotal(quantidade INT, valor_unitario DECIMAL(10, 2))
RETURNS DECIMAL(10, 2) AS $$
BEGIN
    RETURN quantidade * valor_unitario;
END;
$$ LANGUAGE plpgsql;

